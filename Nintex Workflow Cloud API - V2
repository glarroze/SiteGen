{
  "openapi": "3.0.1",
  "info": {
    "title": "Nintex Workflow Cloud API - V2",
    "description": "Nintex Worklfow Cloud API - App Based Auth with Object Support",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://us.nintex.io/workflows/v1"
    }
  ],
  "security": [
    {
      "Oauth2": [
        "execute:instance read:task write:task read:workflow read:instance manage:instance manage:workflow manage:task"
      ]
    }
  ],
  "paths": {
    "/designs/draft": {
      "get": {
        "description": "List Draft Workflows",
        "operationId": "listDraftWorkflows",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of returned results",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the returned list using the property",
            "schema": {
              "type": "string",
              "enum": [
                "lastModified",
                "created"
              ]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort the returned list in Ascending or Descending order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/draft.array"
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "List Draft Workflows"
      }
    },
    "/designs/published": {
      "get": {
        "description": "List Published Workflows",
        "operationId": "listPublishedWorkflows",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of returned results",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort the returned list using the property",
            "schema": {
              "type": "string",
              "enum": [
                "lastModified",
                "created"
              ]
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sort the returned list in Ascending or Descending order",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/published.array"
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "List Published Workflows"
      }
    },
    "/designs/{workflow_id}/draft": {
      "delete": {
        "description": "Delete Draft Workflow",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "description": "Workflow for Deletion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "Delete Draft Workflows"
      }
    },
    "/designs/{workflow_id}": {
      "delete": {
        "description": "Delete Workflow",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "description": "Workflow for Deletion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "Delete Workflows"
      }
    },
    "/designs/{workflow_id}/deactivate": {
      "post": {
        "description": "Deactivate Workflow",
        "operationId": "deactivateWorkflow",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "description": "Workflow ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "Deactivate a Worklfow"
      }
    },
    "/designs/{workflow_id}/activate": {
      "post": {
        "description": "Activate Workflow",
        "operationId": "activateWorkflow",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "description": "Workflow ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "Activate a Workflow"
      }
    },
    "/designs/{workflow_id}/draft/export": {
      "post": {
        "description": "Export Draft Workflow",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "description": "Workflow ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export"
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "Export Draft Worklfow"
      }
    },
    "/designs/{workflow_id}/published/export": {
      "post": {
        "description": "Export Published Workflow",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "description": "Workflow ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/export"
                }
              }
            }
          },
          "400": {
            "description": "failed",
            "content": {}
          }
        },
        "x-ntx-summary": "Export Published Worklfow"
      }
    },
    "/designs/import": {
      "post": {
        "description": "Import Workflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "string",
                    "x-ntx-summary": "Workflow Key"
                  },
                  "name": {
                    "type": "string",
                    "x-ntx-summary": "Workflow Name"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          },
          "400": {
            "description": "Failed",
            "content": {}
          }
        },
        "x-ntx-summary": "Import Worklfow",
        "x-codegen-request-body-name": "body"
      }
    },
    "/tasks": {
      "get": {
        "description": "List Tasks",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "x-ntx-summary": "Start Date"
            },
            "x-ntx-summary": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date",
              "x-ntx-summary": "End Date"
            },
            "x-ntx-summary": "End Date"
          },
          {
            "name": "workflowInstanceId",
            "in": "query",
            "schema": {
              "type": "string",
              "x-ntx-summary": "Workflow Instance Id"
            },
            "x-ntx-summary": "Workflow Instance Id"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Return a list of tasks with this status",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "expired",
                "complete",
                "overridden",
                "terminated",
                "all"
              ],
              "x-ntx-summary": "Task Status"
            },
            "x-ntx-summary": "Task Status"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasks"
                }
              }
            }
          }
        },
        "x-ntx-summary": "List Tasks"
      }
    },
    "/tasks/{task-id}": {
      "get": {
        "description": "Get a Task",
        "parameters": [
          {
            "name": "task-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-ntx-summary": "Task ID"
            },
            "x-ntx-summary": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/task"
                }
              }
            }
          }
        },
        "x-ntx-summary": "Get a Task"
      },
      "patch": {
        "description": "Complete Task",
        "parameters": [
          {
            "name": "task-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-ntx-summary": "Task ID"
            },
            "x-ntx-summary": "Task ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "outcome": {
                    "type": "string",
                    "x-ntx-summary": "Task Outcome"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {}
          }
        },
        "x-ntx-summary": "Complete Task",
        "x-codegen-request-body-name": "Outcome"
      }
    },
    "/instances": {
      "get": {
        "description": "List Workflow Instances",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "running",
                "completed",
                "failed",
                "terminated",
                "all"
              ],
              "x-ntx-summary": "Status"
            },
            "x-ntx-summary": "Status"
          },
          {
            "name": "dateColumn",
            "in": "query",
            "description": "startDateTime - Include instances that started during the selected date period.  endDateTime - Include instances that ended during the selected date period",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "startDateTime",
                "endDateTime"
              ],
              "x-ntx-summary": "Date Column"
            },
            "x-ntx-summary": "Date Column"
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start of the date period to retrieve instances for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "x-ntx-summary": "From"
            },
            "x-ntx-summary": "From"
          },
          {
            "name": "to",
            "in": "query",
            "description": "The end of the date period to retrieve instances for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "x-ntx-summary": "To"
            },
            "x-ntx-summary": "To"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instances.array"
                }
              }
            }
          }
        },
        "x-ntx-summary": "List Instances"
      }
    }
  },
  "components": {
    "schemas": {
      "tasks": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/task"
            }
          }
        }
      },
      "task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "x-ntx-summary": "Task ID"
          },
          "name": {
            "type": "string",
            "x-ntx-summary": "Task Name"
          },
          "description": {
            "type": "string",
            "x-ntx-summary": "Task Description"
          },
          "modified": {
            "type": "string",
            "format": "date",
            "x-ntx-summary": "Task Modified Date"
          },
          "created": {
            "type": "string",
            "format": "date",
            "x-ntx-summary": "Task Created Date"
          },
          "initiator": {
            "type": "string",
            "x-ntx-summary": "Task Initiator"
          },
          "workflow": {
            "type": "string",
            "x-ntx-summary": "Associated Workflow"
          },
          "status": {
            "type": "string",
            "x-ntx-summary": "Task Status"
          },
          "subject": {
            "type": "string",
            "x-ntx-summary": "Task Subject"
          },
          "defaultOutcome": {
            "type": "string",
            "x-ntx-summary": "Default Outcome"
          },
          "outcome": {
            "type": "string",
            "x-ntx-summary": "Task Outcome"
          },
          "completedBy": {
            "type": "string",
            "x-ntx-summary": "Completed By"
          },
          "completedDate": {
            "type": "string",
            "format": "date",
            "x-ntx-summary": "Completed Date"
          },
          "outcomes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ntx-summary": "Configured Outcomes"
          },
          "isAuthenticated": {
            "type": "boolean",
            "x-ntx-summary": "Is Authenticated Task"
          },
          "assignTo": {
            "type": "string",
            "x-ntx-summary": "Assigned To"
          },
          "assignees": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "x-ntx-summary": "Assignees"
          },
          "message": {
            "type": "string",
            "x-ntx-summary": "Message"
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "x-ntx-summary": "Due Date"
          },
          "actionInstanceId": {
            "type": "string",
            "x-ntx-summary": "Action Instance ID"
          },
          "workflowInstanceId": {
            "type": "string",
            "x-ntx-summary": "Workflow Instance ID"
          },
          "urls": {
            "type": "object",
            "properties": {
              "formUrl": {
                "type": "string",
                "x-ntx-summary": "Form URL"
              }
            }
          }
        }
      },
      "draft.array": {
        "type": "object",
        "properties": {
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/draft.object"
            }
          }
        }
      },
      "draft.object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "draft": {
            "$ref": "#/components/schemas/draft.workflows"
          },
          "lastModified": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "draft.workflows": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/author"
          },
          "description": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date"
          },
          "lastModified": {
            "type": "string",
            "format": "date"
          },
          "eventType": {
            "$ref": "#/components/schemas/eventType"
          },
          "urls": {
            "$ref": "#/components/schemas/urls"
          }
        }
      },
      "published.array": {
        "type": "object",
        "properties": {
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/published.object"
            }
          }
        }
      },
      "published.object": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "published": {
            "$ref": "#/components/schemas/published.workflows"
          },
          "lastModified": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "published.workflows": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/author"
          },
          "description": {
            "type": "string"
          },
          "publishedType": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "created": {
            "type": "string",
            "format": "date"
          },
          "lastPublished": {
            "type": "string",
            "format": "date"
          },
          "eventType": {
            "$ref": "#/components/schemas/eventType"
          },
          "urls": {
            "$ref": "#/components/schemas/urls"
          }
        }
      },
      "eventType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "author": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "urls": {
        "type": "object",
        "properties": {
          "designerUrl": {
            "type": "string"
          }
        }
      },
      "export": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          }
        }
      },
      "instances.array": {
        "type": "object",
        "properties": {
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instances.object"
            }
          }
        }
      },
      "instances.object": {
        "type": "object",
        "properties": {
          "instanceId": {
            "type": "string",
            "x-ntx-summary": "Instance ID"
          },
          "workflow": {
            "$ref": "#/components/schemas/instances.workflow"
          },
          "startDateTime": {
            "type": "string",
            "format": "date",
            "x-ntx-summary": "Start Date Time"
          },
          "endDateTime": {
            "type": "string",
            "format": "date",
            "x-ntx-summary": "End Date Time"
          },
          "status": {
            "type": "string",
            "x-ntx-summary": "Workflow Status"
          }
        }
      },
      "instances.workflow": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Oauth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://{{tenant_location}}.nintex.io/authentication/v1/token",
            "scopes": {
              "execute:instance read:task write:task read:workflow read:instance manage:instance manage:workflow manage:task": "Workflow Admin Scopes"
            }
          }
        },
        "x-ntx-connection-properties": {
          "type": "object",
          "properties": {
            "tenant_location": {
              "type": "string",
              "title": "Tenant Location",
              "description": "Enter your tenant location. us=North America, eu=Europe, au=Australia"
            }
          }
        }
      }
    }
  },
  "x-ntx-host": "{{tenant_location}}.nintex.io",
  "x-ntx-render-version": 2
}
